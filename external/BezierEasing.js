var r="function"==typeof Float32Array;function A(r,n){return 1-3*n+3*r}function B(r,n){return 3*n-6*r}function C(r){return 3*r}function calcBezier(r,n,e){return((A(n,e)*r+B(n,e))*r+C(n))*r}function getSlope(r,n,e){return 3*A(n,e)*r*r+2*B(n,e)*r+C(n)}function LinearEasing(r){return r}var src=function(n,e,t,a){if(!(0<=n&&n<=1&&0<=t&&t<=1))throw new Error("bezier x values must be in [0, 1] range");if(n===e&&t===a)return LinearEasing;for(var u=r?new Float32Array(11):new Array(11),i=0;i<11;++i)u[i]=calcBezier(.1*i,n,t);return function(r){return 0===r?0:1===r?1:calcBezier(function(r){for(var e=0,a=1;10!==a&&u[a]<=r;++a)e+=.1;--a;var i=e+(r-u[a])/(u[a+1]-u[a])*.1,o=getSlope(i,n,t);return o>=.001?function(r,n,e,t){for(var a=0;a<4;++a){var u=getSlope(n,e,t);if(0===u)return n;n-=(calcBezier(n,e,t)-r)/u}return n}(r,i,n,t):0===o?i:function(r,n,e,t,a){var u,i,o=0;do{(u=calcBezier(i=n+(e-n)/2,t,a)-r)>0?e=i:n=i}while(Math.abs(u)>1e-7&&++o<10);return i}(r,e,e+.1,n,t)}(r),e,a)}};export{src as default};
//# sourceMappingURL=BezierEasing.js.map
